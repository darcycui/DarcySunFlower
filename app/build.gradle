plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    namespace 'com.darcy.message.sunflower'
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.darcy.message.sunflower"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    // load key store from local.properties
    def localProperties = new Properties()
    def localPropertiesFile = rootProject.file('local.properties')
    if (localPropertiesFile.exists()) {
        localProperties.load(localPropertiesFile.newInputStream())
    }

    signingConfigs {
        debug {
            storeFile file(localProperties.getProperty('keystore_path'))
            keyAlias localProperties.getProperty('key_alias')
            storePassword localProperties.getProperty('store_password')
            keyPassword localProperties.getProperty('key_password')
        }
        release {
            storeFile file(localProperties.getProperty('keystore_path'))
            keyAlias localProperties.getProperty('key_alias')
            storePassword localProperties.getProperty('store_password')
            keyPassword localProperties.getProperty('key_password')
        }
    }
    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            shrinkResources false
            signingConfig signingConfigs.debug
            // network security config
            resValue "xml", "network_security_config", "@xml/network_security_config_debug"
        }
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release
            // network security config
            resValue "xml", "network_security_config", "@xml/network_security_config_release"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding = true
        viewBinding = true
    }
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.10.0'
    implementation 'androidx.activity:activity:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junitAndroidxVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"

    // hilt di
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    api project(':lib_common')
    implementation project(':lib_im')
    implementation project(':lib_db')
    api project(':lib_ui')
    api project(':lib_data_store')

}
