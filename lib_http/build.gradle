plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    // kotlin serialization
//    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'org.jetbrains.kotlin.plugin.serialization' version "1.9.22"
}

android {
    namespace 'com.darcy.message.lib_http'
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        minSdk rootProject.minSdkVersion

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"

        // todo 设置资源文件前缀 防止资源名重复
        resourcePrefix "lib_http_"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // 单元测试配置
    testOptions {
        unitTests.returnDefaultValues = true
    }
}

dependencies {
    testImplementation "junit:junit:$rootProject.junitVersion"
    androidTestImplementation "androidx.test.ext:junit:$rootProject.junitAndroidxVersion"
    androidTestImplementation "androidx.test.espresso:espresso-core:$rootProject.espressoVersion"

    api project(':lib_common')
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitConverterGsonVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okhttpLoggingVersion"

    // hilt di
    implementation "com.google.dagger:hilt-android:$rootProject.hiltVersion"
    kapt "com.google.dagger:hilt-android-compiler:$rootProject.hiltVersion"

    // ktor core
    implementation "io.ktor:ktor-client-core:$rootProject.ktorVersion"
    // ktor android
    implementation "io.ktor:ktor-client-android:$rootProject.ktorVersion"
    implementation "io.ktor:ktor-client-okhttp:$rootProject.ktorVersion"
    // ktor convert json to bean
    implementation "io.ktor:ktor-client-content-negotiation:$rootProject.ktorVersion"
    implementation "io.ktor:ktor-serialization-kotlinx-json:$rootProject.ktorVersion"
    // ktor log
    implementation "io.ktor:ktor-client-logging:$rootProject.ktorVersion"
    // ktor gson
    implementation "io.ktor:ktor-serialization-gson:$rootProject.ktorVersion"

    implementation("org.jetbrains.kotlinx:kotlinx-serialization-core:1.6.2")
    implementation("org.jetbrains.kotlinx:kotlinx-serialization-json:1.6.2")

}